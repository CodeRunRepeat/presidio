/*
 * Presidio
 *
 * Context aware, pluggable and customizable PII anonymization service for text and images.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: presidio@microsoft.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Microsoft.Presidio.Client;
using Microsoft.Presidio.Api;
// uncomment below to import models
//using Microsoft.Presidio.Model;

namespace Microsoft.Presidio.Test.Api
{
    /// <summary>
    ///  Class for testing AnalyzerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AnalyzerApiTests : IDisposable
    {
        private AnalyzerApi instance;

        public AnalyzerApiTests()
        {
            instance = new AnalyzerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AnalyzerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AnalyzerApi
            //Assert.IsType<AnalyzerApi>(instance);
        }

        /// <summary>
        /// Test AnalyzePost
        /// </summary>
        [Fact]
        public void AnalyzePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AnalyzeRequest analyzeRequest = null;
            //var response = instance.AnalyzePost(analyzeRequest);
            //Assert.IsType<List<RecognizerResultWithAnaysisExplanation>>(response);
        }

        /// <summary>
        /// Test HealthGet
        /// </summary>
        [Fact]
        public void HealthGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.HealthGet();
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test RecognizersGet
        /// </summary>
        [Fact]
        public void RecognizersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string language = null;
            //var response = instance.RecognizersGet(language);
            //Assert.IsType<List<string>>(response);
        }

        /// <summary>
        /// Test SupportedentitiesGet
        /// </summary>
        [Fact]
        public void SupportedentitiesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string language = null;
            //var response = instance.SupportedentitiesGet(language);
            //Assert.IsType<List<string>>(response);
        }
    }
}
