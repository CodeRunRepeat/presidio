/* 
 * Presidio
 *
 * Context aware, pluggable and customizable PII anonymization service for text and images.
 *
 * OpenAPI spec version: 2.0
 * Contact: presidio@microsoft.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Microsoft.Presidio.Client;
using Microsoft.Presidio.Api;
using Microsoft.Presidio.Model;

namespace Microsoft.Presidio.Test
{
    /// <summary>
    ///  Class for testing AnalyzerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AnalyzerApiTests
    {
        private AnalyzerApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AnalyzerApi();
            instance.Configuration.BasePath = "http://127.0.0.1:3000/";
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AnalyzerApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            Assert.IsInstanceOfType(typeof(AnalyzerApi), instance, "instance is a AnalyzerApi");
        }

        /// <summary>
        /// Test AnalyzePost
        /// </summary>
        [Test]
        public void AnalyzePostTest()
        {
            AnalyzeRequest body = new AnalyzeRequest(text: "My name is Inigo Montoya, you killed my father, prepare to die.", language: "en");
            var response = instance.AnalyzePost(body);
            Assert.IsTrue(response.Count.Equals(1));
            Assert.IsInstanceOf<List<RecognizerResultWithAnaysisExplanation>> (response, "response is List<RecognizerResultWithAnaysisExplanation>");
        }
        /// <summary>
        /// Test HealthGet
        /// </summary>
        [Test]
        public void HealthGetTest()
        {
            var response = instance.HealthGet();
            Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test RecognizersGet
        /// </summary>
        [Test]
        public void RecognizersGetTest()
        {
            string language = "en";
            var response = instance.RecognizersGet(language);
            Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        /// <summary>
        /// Test SupportedentitiesGet
        /// </summary>
        [Test]
        public void SupportedentitiesGetTest()
        {
            string language = null;
            var response = instance.SupportedentitiesGet(language);
            Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
    }
