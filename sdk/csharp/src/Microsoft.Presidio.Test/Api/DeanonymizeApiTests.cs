/*
 * Presidio
 *
 * Context aware, pluggable and customizable PII anonymization service for text and images.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: presidio@microsoft.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Microsoft.Presidio.Client;
using Microsoft.Presidio.Api;
using Microsoft.Presidio.Model;

namespace Microsoft.Presidio.Test.Api
{
    /// <summary>
    ///  Class for testing DeanonymizeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DeanonymizeApiTests : IDisposable
    {
        private DeanonymizeApi instance;

        public DeanonymizeApiTests()
        {
            instance = new DeanonymizeApi();
            instance.Configuration.BasePath = "http://127.0.0.1:3000";
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DeanonymizeApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            Assert.IsInstanceOfType(typeof(DeanonymizeApi), instance, "instance is a DeanonymizerApi");
        }

        /// <summary>
        /// Test DeanonymizePost
        /// </summary>
        [Fact]
        public void DeanonymizePostTest()
        {
             var decrypt = new Decrypt("decrypt", "3t6w9z$C&F)J@NcR");
            var deanonymizers = new Dictionary<string, object>() {{"PERSON", decrypt}};
            var anonymizerResult = new AnonymizerResult(start: 11, end: 55, entityType: "PERSON");
            var anonymizerResults = new List<AnonymizerResult>() {anonymizerResult};
            DeanonymizeRequest body = new DeanonymizeRequest(
                text: "My name is MnHePFVW1uQEWKNYRbc7c4AiFySIgh8XLiDq0n9w4qU=, you killed my father prepare to die.", deanonymizers: deanonymizers,
                anonymizerResults: anonymizerResults);
            var response = instance.DeanonymizePost(body);
            Assert.IsInstanceOf<DeanonymizeResponse>(response, "response is DeanonymizeResponse");
            Assert.IsTrue(response.Text == "My name is Inigo Montoya, you killed my father prepare to die.");
        }
    }
}
