/*
 * Presidio
 *
 * Context aware, pluggable and customizable PII anonymization service for text and images.
 *
 * OpenAPI spec version: 2.0
 * Contact: presidio@microsoft.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Microsoft.Presidio.Attributes;

using Microsoft.AspNetCore.Authorization;
using Microsoft.Presidio.Models;

namespace Microsoft.Presidio.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AnalyzerApiController : ControllerBase
    { 
        /// <summary>
        /// Analyze Text
        /// </summary>
        /// <remarks>Recognizes PII entities in a given text and returns their types, locations and score</remarks>
        /// <param name="body"></param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/analyze")]
        [ValidateModelState]
        [SwaggerOperation("AnalyzePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RecognizerResultWithAnaysisExplanation>), description: "OK")]
        public virtual IActionResult AnalyzePost([FromBody]AnalyzeRequest body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RecognizerResultWithAnaysisExplanation>));
            string exampleJson = null;
            exampleJson = "[ \"\", \"\" ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<RecognizerResultWithAnaysisExplanation>>(exampleJson)
                        : default(List<RecognizerResultWithAnaysisExplanation>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Healthcheck
        /// </summary>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/health")]
        [ValidateModelState]
        [SwaggerOperation("HealthGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult HealthGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            string exampleJson = null;
            exampleJson = "\"Presidio Anonymizer service is up\"";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<string>(exampleJson)
                        : default(string);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Recognizers
        /// </summary>
        /// <remarks>Get the available PII recognizers for a given language</remarks>
        /// <param name="language">Two characters for the desired language in ISO_639-1 format</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/recognizers")]
        [ValidateModelState]
        [SwaggerOperation("RecognizersGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<string>), description: "OK")]
        public virtual IActionResult RecognizersGet([FromQuery]string language)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<string>));
            string exampleJson = null;
            exampleJson = "[ \"\", \"\" ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<string>>(exampleJson)
                        : default(List<string>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get supported entities
        /// </summary>
        /// <remarks>Get the list of PII entities Presidio-Analyzer is capable of detecting</remarks>
        /// <param name="language">Two characters for the desired language in ISO_639-1 format</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/supportedentities")]
        [ValidateModelState]
        [SwaggerOperation("SupportedentitiesGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<string>), description: "OK")]
        public virtual IActionResult SupportedentitiesGet([FromQuery]string language)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<string>));
            string exampleJson = null;
            exampleJson = "[ \"PERSON\", \"PERSON\" ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<string>>(exampleJson)
                        : default(List<string>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
